Sub CorrelCompare()
' Andrew Fairless, June 2009

' This program calculates whether two correlations are significantly different when they are correlated with each other.
' The calculations in this program follow Steiger (1980), Tests for Comparing Elements of a Correlation Matrix, Psychological
' Bulletin, Vol 87 No 2, 245-251.

' This program takes a correlation matrix, the number of cases covered by the correlations (N), and the two cells containing
' the correlations to be compared as input.

Dim MatrixRange As Range, OtherCorrRange As Range
Dim OtherCorrArray(1 To 4) As Single
Dim N As Integer
Dim Rjk As Variant, Rhm As Variant
Dim RjkCell As Variant, RhmCell As Variant, RjkMatrixCell As Variant, RhmMatrixCell As Variant
Dim MatrixColStart As Integer, MatrixRowStart As Integer
Dim J As Integer, K As Integer, H As Integer, M As Integer
Dim MatrixColCount As Integer, MatrixRowCount As Integer
Dim Rjh As Variant, Rkh As Variant, Rkm As Variant, Rjm As Variant
Dim Index1 As Integer

' This program assumes that a cell of the correlation matrix is highlighted, and that the first row and column of the matrix
' contain the names of the variables that were correlated.  Two rows above and two rows to the left of the matrix should be
' empty.  Several columns to the left of the header row should be the N of the data set.

' Locates correlation matrix.
    Selection.CurrentRegion.Select
    Set MatrixRange = Selection.CurrentRegion
    MatrixColCount = MatrixRange.Columns.Count - 1
    MatrixRowCount = MatrixRange.Rows.Count - 1

' Labels matrix rows with numbers.
    MatrixRange.Range("A1").Select
    ActiveCell.Offset(1, -1).Select
    For Index1 = 1 To MatrixRowCount
        ActiveCell.Value = Index1
        ActiveCell.Offset(1, 0).Select
    Next
' Labels matrix columns with numbers.
    MatrixRange.Range("A1").Select
    ActiveCell.Offset(-1, 1).Select
    For Index1 = 1 To MatrixColCount
        ActiveCell.Value = Index1
        ActiveCell.Offset(0, 1).Select
    Next
    
' Inputs N and the two correlations to be compared.  Color-codes cells containing the 2 correlations.
    MatrixRange.Range("A1").Select
    Do While ActiveCell.Value = ""
        ActiveCell.Offset(0, -1).Select
    Loop
    N = ActiveCell.Value
    ActiveCell.Offset(1, 0).Select
    Rjk = ActiveCell.Value
    RjkCell = ActiveCell.Formula
    ActiveCell.Interior.ColorIndex = 6
    ActiveCell.Offset(1, 0).Select
    Rhm = ActiveCell.Value
    RhmCell = ActiveCell.Formula
    ActiveCell.Interior.ColorIndex = 45
    
    Set OtherCorrRange = Range(ActiveCell.Offset(2, 0), ActiveCell.Offset(5, 0))
    
' Determines the locations (by row and column) of the cells in the matrix containing the correlations to be compared.
' The location row and column numbers are both absolute (in reference to entire spreadsheet) and relative to the matrix location.
    MatrixColStart = MatrixRange.Range("A1").Column
    MatrixRowStart = MatrixRange.Range("A1").Row
    RjkCellCol = Range(RjkCell).Column
    RjkCellRow = Range(RjkCell).Row
    RhmCellCol = Range(RhmCell).Column
    RhmCellRow = Range(RhmCell).Row
    J = RjkCellRow - MatrixRowStart
    K = RjkCellCol - MatrixColStart
    H = RhmCellRow - MatrixRowStart
    M = RhmCellCol - MatrixColStart
    
    MatrixRange.Range("B2").Select
    OtherCorrArray(1) = ActiveCell.Cells(J, H).Value
    OtherCorrArray(2) = ActiveCell.Cells(K, H).Value
    OtherCorrArray(3) = ActiveCell.Cells(K, M).Value
    OtherCorrArray(4) = ActiveCell.Cells(J, M).Value
    OtherCorrRange = Application.WorksheetFunction.Transpose(OtherCorrArray)
    
' Labels and colors the matrix rows and columns according to the variables (as in Steiger, 1980).
    Range(RjkCell).Interior.ColorIndex = 6
    Range(RhmCell).Interior.ColorIndex = 45
    ActiveCell.Cells(J, -2) = "j"
    ActiveCell.Cells(-2, J) = "j"
    ActiveCell.Cells(J, -2).Interior.ColorIndex = 6
    ActiveCell.Cells(-2, K) = "k"
    ActiveCell.Cells(K, -2) = "k"
    ActiveCell.Cells(-2, K).Interior.ColorIndex = 6
    ActiveCell.Cells(H, -2) = "h"
    ActiveCell.Cells(-2, H) = "h"
    ActiveCell.Cells(H, -2).Interior.ColorIndex = 45
    ActiveCell.Cells(-2, M) = "m"
    ActiveCell.Cells(M, -2) = "m"
    ActiveCell.Cells(-2, M).Interior.ColorIndex = 45
    
    ActiveCell.Cells(J, H).Interior.ColorIndex = 34
    ActiveCell.Cells(K, H).Interior.ColorIndex = 34
    ActiveCell.Cells(K, M).Interior.ColorIndex = 34
    ActiveCell.Cells(J, M).Interior.ColorIndex = 34
    ActiveCell.Cells(H, J).Interior.ColorIndex = 35
    ActiveCell.Cells(H, K).Interior.ColorIndex = 35
    ActiveCell.Cells(M, K).Interior.ColorIndex = 35
    ActiveCell.Cells(M, J).Interior.ColorIndex = 35
    
'    RjkMatrixCell = Range(RjkCell).Address(False, False, xlR1C1, False, MatrixRange.Range("A1"))
'    RhmMatrixCell = Range(RhmCell).Address(False, False, xlR1C1, False, MatrixRange.Range("A1"))
'    Range("g1").Value = N

End Sub
